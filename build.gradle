 plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.8.20-RC2'
    id("io.papermc.paperweight.userdev") version "1.5.3"
     id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'de.theskyscout'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven { url 'https://repo.cloudnetservice.eu/repository/releases/' }
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}

dependencies {

    paperweight.paperDevBundle("1.19.2-R0.1-SNAPSHOT")
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
    implementation "commons-io:commons-io:2.11.0"
    implementation 'org.mongodb:mongo-java-driver:3.12.11'
    implementation 'de.dytanic.cloudnet:driver:3.4.0-RELEASE'
    compileOnly "net.luckperms:api:5.4"
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "17"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "17"
    }
}
